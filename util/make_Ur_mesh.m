% Antti Hannukainen / 4.3.2018 / Otaniemi
%
%-----------------------------------------------
%
% make_Ur_mesh.m
%
% Generate mesh for domain Ur = (0,r)x(0,r) . First, an initial mesh 
% is generated by dividing each cell z + [0, 1), z âˆˆ Z^2 \cap Ur 
% into two triangles and then using N levels of uniform mesh refinement. 
% The mesh is stored into mesh - data structure, for information, 
% see inittri.m 
%  
% The mesh can be visualised by plot_2Dtri_mesh(mesh). As an example, 
%
% mesh = make_Ur_mesh(10,2); figure; plot_2Dtri_mesh(mesh);
%
% t2c  = 2 x Nt matrix mapping triangles to cells. Triangle i belongs to the cell 
%       (t2c(1,i)-1)x(t2c(2,i)-1)x(t2c(1,i))x(t2c(2,i)).
%


function [mesh,t2c] = make_Ur_mesh(r,N)


%--------------------------------
% Generate the initial mesh
%--------------------------------

% generate nodes in the order 
% (0,0) (0,1) .. (0,r) (1,0) (1,1) ... (1,r) ... (r,r)

[I,J] = meshgrid(0:r,0:r);
p = [I(:)' ; J(:)']; 

% generate triangles by looping over each cell (i,j)x(i+1,j+1)
%
% the index of the corner nodes of the cell are
%
% (i,j)     -> (j+1)+i*(r+1) 
% (i,j+1)   -> (j+2)+i*(r+1)
% (i+1,j)   -> (j+1)+(i+1)*(r+1) 
% (i+1,j+1) -> (j+2)+(i+1)*(r+1)
%
% NOTE : in matlab, indexing starts from 1. Thus 1 is added to all indeces.

t = [];
t2c = []; 
for i=0:(r-1)
    for j=0:(r-1)

        n1 = (j+1)+i*(r+1);
        n2 = (j+2)+i*(r+1);
        n3 = (j+1)+(i+1)*(r+1);
        n4 = (j+2)+(i+1)*(r+1);
        
        t = [t [n1 n2 ; n2 n3 ; n3 n4] ];
        t2c = [ t2c [i+1 i+1 ; j+1 j+1]]; 
    end
end
            
% initialize mesh
mesh = inittri(p,t);

%% Refine the initial mesh N-times
for i=1:N
  [mesh,ch] = refine_tri(mesh);
  t2c = t2c(:,ch.t_parent);
end
